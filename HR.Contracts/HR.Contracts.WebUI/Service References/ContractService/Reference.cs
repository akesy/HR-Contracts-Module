//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HR.Contracts.WebUI.ContractService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoContract", Namespace="http://schemas.datacontract.org/2004/07/HR.Contracts.Services.Dto")]
    [System.SerializableAttribute()]
    public partial class DtoContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<HR.Contracts.WebUI.ContractService.ContractType> TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Experience {
            get {
                return this.ExperienceField;
            }
            set {
                if ((this.ExperienceField.Equals(value) != true)) {
                    this.ExperienceField = value;
                    this.RaisePropertyChanged("Experience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<HR.Contracts.WebUI.ContractService.ContractType> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractType", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum ContractType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Developer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tester = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContractService.IContractService")]
    public interface IContractService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/AddContract", ReplyAction="http://tempuri.org/IContractService/AddContractResponse")]
        bool AddContract(HR.Contracts.WebUI.ContractService.DtoContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/AddContract", ReplyAction="http://tempuri.org/IContractService/AddContractResponse")]
        System.Threading.Tasks.Task<bool> AddContractAsync(HR.Contracts.WebUI.ContractService.DtoContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/GetAllContracts", ReplyAction="http://tempuri.org/IContractService/GetAllContractsResponse")]
        HR.Contracts.WebUI.ContractService.DtoContract[] GetAllContracts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/GetAllContracts", ReplyAction="http://tempuri.org/IContractService/GetAllContractsResponse")]
        System.Threading.Tasks.Task<HR.Contracts.WebUI.ContractService.DtoContract[]> GetAllContractsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContractServiceChannel : HR.Contracts.WebUI.ContractService.IContractService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractServiceClient : System.ServiceModel.ClientBase<HR.Contracts.WebUI.ContractService.IContractService>, HR.Contracts.WebUI.ContractService.IContractService {
        
        public ContractServiceClient() {
        }
        
        public ContractServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddContract(HR.Contracts.WebUI.ContractService.DtoContract contract) {
            return base.Channel.AddContract(contract);
        }
        
        public System.Threading.Tasks.Task<bool> AddContractAsync(HR.Contracts.WebUI.ContractService.DtoContract contract) {
            return base.Channel.AddContractAsync(contract);
        }
        
        public HR.Contracts.WebUI.ContractService.DtoContract[] GetAllContracts() {
            return base.Channel.GetAllContracts();
        }
        
        public System.Threading.Tasks.Task<HR.Contracts.WebUI.ContractService.DtoContract[]> GetAllContractsAsync() {
            return base.Channel.GetAllContractsAsync();
        }
    }
}
